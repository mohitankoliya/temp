{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roxon Technologies\\\\Downloads\\\\front-react\\\\src\\\\Component\\\\ActiveStylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { SliderContainer, MainContainer, GalleryContainer, TextContainer, StylistName, LeftAlignedColumnContainer, OverLay, Wrapper } from \"./StyleofStylist\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { Draggable } from \"gsap/Draggable\"; // import { motion, useAnimation } from \"framer-motion\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger, Draggable);\nexport function ActiveStylist(props) {\n  _s();\n\n  console.log(\"ActiveStylist\", props);\n  const imageRefs = useRef([]);\n  imageRefs.current = [];\n  const textRefs = useRef([]);\n  textRefs.current = [];\n\n  const addToRefs = el => {\n    if (el && !imageRefs.current.includes(el)) {\n      imageRefs.current.push(el);\n      console.log(imageRefs);\n    }\n  };\n\n  const addToTextRefs = el => {\n    if (el && !textRefs.current.includes(el)) {\n      textRefs.current.push(el);\n      console.log(textRefs);\n    }\n  };\n\n  const proxy = document.createElement(\"div\");\n  const scroller2 = document.getElementById(\"scroller2\");\n  useEffect(() => {\n    imageRefs.current.forEach((el, index) => {\n      gsap.fromTo(el, {\n        filter: 'blur(0px)',\n        scale: 1,\n        autoAlpha: 0.98\n      }, {\n        duration: 0.6,\n        ease: 'power2',\n        filter: 'blur(0px)',\n        scale: 1,\n        autoAlpha: 1,\n        scrollTrigger: {\n          id: `section-${index + 1}`,\n          trigger: el,\n          scroller: '.scroller2',\n          start: 'left 350',\n          end: 'right 40',\n          toggleActions: 'play none none none',\n          horizontal: true,\n          scrub: 1,\n          onLeave: () => gsap.to(el, {\n            autoAlpha: 0,\n            duration: 0.4,\n            ease: 'power3.easeOut'\n          }),\n          onEnterBack: () => gsap.to(el, {\n            autoAlpha: 1,\n            duration: 0.8,\n            delay: 1.2,\n            ease: 'powe2.easeOut'\n          })\n        }\n      });\n    });\n    textRefs.current.forEach((el, index) => {\n      if (index === 0) {\n        return;\n      }\n\n      gsap.fromTo(el, {\n        autoAlpha: 0\n      }, {\n        duration: 0.5,\n        autoAlpha: 1 //   scrollTrigger: {\n        //     id: `section-${index + 1}`,\n        //     scroller: '.scroller2',\n        //     trigger: imageRefs.current[index - 1],\n        //     toggleActions: 'play none none none',\n        //     scrub: 1,\n        //     start: 'right +=250',\n        //     horizontal: true\n        //   }\n\n      });\n    });\n    const slider = document.querySelector('.scroller2');\n    let isDown = false;\n    let startX;\n    let scrollLeft;\n    let scrollRight;\n    slider.addEventListener('pointerdown', e => {\n      isDown = true;\n      startX = e.pageX - slider.offsetLeft;\n      scrollLeft = slider.scrollLeft;\n      scrollRight = slider.scrollRight;\n    });\n    slider.addEventListener('pointerleave', () => {\n      isDown = false;\n      slider.classList.remove('active');\n    });\n    slider.addEventListener('pointerup', () => {\n      isDown = false;\n    });\n    slider.addEventListener('pointermove', e => {\n      if (!isDown) return;\n      e.preventDefault();\n      const x = e.pageX - slider.offsetLeft;\n      const walk = (x - startX) * 3; //scroll-fast\n\n      slider.scrollLeft = scrollLeft - walk;\n      slider.scrollRight = scrollRight + walk;\n      console.log(walk);\n    });\n    /** */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GalleryContainer, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(SliderContainer, {\n          className: \"scroller2\",\n          id: \"scroller2\",\n          children: props.item.map((stylist, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(LeftAlignedColumnContainer, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: addToRefs,\n                  style: {\n                    // marginLeft: \"20px\",\n                    marginRight: \"32px\",\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(OverLay, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: stylist,\n                    style: {\n                      width: \"64.59px\",\n                      height: \"63.82px\",\n                      borderRadius: \"15px\" //   aspectRatio: \"16:9\",\n                      //   imageRendering: \"crisp-edges\"\n\n                    },\n                    src: stylist.stylist_image\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tcenon onlineg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n                  ref: addToTextRefs,\n                  children: /*#__PURE__*/_jsxDEV(StylistName, {\n                    children: stylist.stylist_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(ActiveStylist, \"8S6Sn8kX5hsLS1jqpZQTSMmHza0=\");\n\n_c = ActiveStylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveStylist\");","map":{"version":3,"sources":["C:/Users/Roxon Technologies/Downloads/front-react/src/Component/ActiveStylist.js"],"names":["React","useRef","useEffect","SliderContainer","MainContainer","GalleryContainer","TextContainer","StylistName","LeftAlignedColumnContainer","OverLay","Wrapper","gsap","ScrollTrigger","Draggable","registerPlugin","ActiveStylist","props","console","log","imageRefs","current","textRefs","addToRefs","el","includes","push","addToTextRefs","proxy","document","createElement","scroller2","getElementById","forEach","index","fromTo","filter","scale","autoAlpha","duration","ease","scrollTrigger","id","trigger","scroller","start","end","toggleActions","horizontal","scrub","onLeave","to","onEnterBack","delay","slider","querySelector","isDown","startX","scrollLeft","scrollRight","addEventListener","e","pageX","offsetLeft","classList","remove","preventDefault","x","walk","item","map","stylist","marginRight","display","width","height","borderRadius","stylist_image","stylist_name"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } \nfrom \"react\";\nimport {\n  SliderContainer,\n  MainContainer,\n  GalleryContainer,\n  TextContainer,  \n  StylistName,\n  LeftAlignedColumnContainer,\n  OverLay,\n  Wrapper\n} from \"./StyleofStylist\";\n\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { Draggable } from \"gsap/Draggable\";\n// import { motion, useAnimation } from \"framer-motion\";\n\ngsap.registerPlugin(ScrollTrigger, Draggable);\n\nexport function ActiveStylist(props) {\n    console.log(\"ActiveStylist\", props)\n      const imageRefs = useRef([]);\n      imageRefs.current = [];\n      const textRefs = useRef([]);\n      textRefs.current = [];\n    \n      const addToRefs = el => {\n        if (el && !imageRefs.current.includes(el)) {\n          imageRefs.current.push(el);\n          console.log(imageRefs);\n        }\n      };\n    \n      const addToTextRefs = el => {\n        if (el && !textRefs.current.includes(el)) {\n          textRefs.current.push(el);\n          console.log(textRefs);\n        }\n      };\n      const proxy = document.createElement(\"div\");\n      const scroller2 = document.getElementById(\"scroller2\");\n      useEffect(() => {\n        imageRefs.current.forEach((el, index) => {\n          gsap.fromTo(\n            el,\n            {\n              filter: 'blur(0px)',\n              scale: 1,\n              autoAlpha: 0.98\n            },\n            {\n              duration: 0.6,\n              ease: 'power2',\n              filter: 'blur(0px)',\n              scale: 1,\n              autoAlpha: 1,\n              scrollTrigger: {\n                id: `section-${index + 1}`,\n                trigger: el,\n                scroller: '.scroller2',\n                start: 'left 350',\n                end: 'right 40',\n                toggleActions: 'play none none none',\n                horizontal: true,\n                scrub: 1,\n                onLeave: () =>\n                  gsap.to(el, {\n                    autoAlpha: 0,\n                    duration: 0.4,\n                    ease: 'power3.easeOut'\n                  }),\n                onEnterBack: () =>\n                  gsap.to(el, {\n                    autoAlpha: 1,\n                    duration: 0.8,\n                    delay: 1.2,\n                    ease: 'powe2.easeOut'\n                  })\n              }\n            }\n          );\n        });\n    \n        textRefs.current.forEach((el, index) => {\n          if (index === 0) {\n            return;\n          }\n          gsap.fromTo(\n            el,\n            {\n              autoAlpha: 0\n            },\n            {\n              duration: 0.5,\n              autoAlpha: 1,\n            //   scrollTrigger: {\n            //     id: `section-${index + 1}`,\n            //     scroller: '.scroller2',\n            //     trigger: imageRefs.current[index - 1],\n            //     toggleActions: 'play none none none',\n            //     scrub: 1,\n            //     start: 'right +=250',\n            //     horizontal: true\n            //   }\n            }\n          );\n        });\n        const slider = document.querySelector('.scroller2');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n        let scrollRight;\n        slider.addEventListener('pointerdown', e => {\n          isDown = true;\n          startX = e.pageX - slider.offsetLeft;\n          scrollLeft = slider.scrollLeft;\n          scrollRight = slider.scrollRight;\n        });\n        slider.addEventListener('pointerleave', () => {\n          isDown = false;\n          slider.classList.remove('active');\n        });\n        slider.addEventListener('pointerup', () => {\n          isDown = false;\n        });\n        slider.addEventListener('pointermove', e => {\n          if (!isDown) return;\n          e.preventDefault();\n          const x = e.pageX - slider.offsetLeft;\n          const walk = (x - startX) * 3; //scroll-fast\n          slider.scrollLeft = scrollLeft - walk;\n          slider.scrollRight = scrollRight + walk;\n          console.log(walk);\n        });\n        /** */\n      }, []);\n    \n      return (\n        <>\n          <GalleryContainer>\n            <MainContainer>\n              <SliderContainer className=\"scroller2\" id=\"scroller2\">\n                {props.item.map((stylist, index) => {\n                  return (\n                    <>\n                      {\" \"}\n                      <LeftAlignedColumnContainer>\n                        <div\n                          ref={addToRefs}\n                          style={{\n                            // marginLeft: \"20px\",\n                            marginRight: \"32px\",\n                            display: \"flex\"\n                          }}\n                        >\n                          <OverLay />\n                          <img \n                            alt={stylist}\n                            key={index}\n                            style={{\n                                width: \"64.59px\",\n                                height: \"63.82px\",\n                              borderRadius: \"15px\",\n                            //   aspectRatio: \"16:9\",\n                            //   imageRendering: \"crisp-edges\"\n                            }}\n                            src={stylist.stylist_image}\n                          /> <div className=\"tcenon onlineg\"></div>\n                        </div>\n                       \n                       \n                        <TextContainer ref={addToTextRefs}>\n                        <StylistName>{stylist.stylist_name}</StylistName>\n                        </TextContainer>\n                      </LeftAlignedColumnContainer>\n                    </>\n                  );\n                })}\n              </SliderContainer>\n            </MainContainer>\n          </GalleryContainer>\n        </>\n      );\n}\n"]},"metadata":{},"sourceType":"module"}